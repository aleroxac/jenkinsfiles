pipeline {
    // REQUIREMENTS
    // jenkins job parameters
    // - TARGET_REPO_NAME: string

    agent { 
        node { label 'jenkins-node-main-v1' }
    }

    options {
        timeout(time: 1, unit: 'HOURS')
    }

    stages {
        stage('build') {
            steps {
                script {
                    def allJobs = Jenkins.instance.getAllItems(Job.class)
                    def matchingJobs = []

                    allJobs.each { job ->
                        def scm = job.getSCMs()
                        if (scm && scm[0] && scm[0].getUserRemoteConfigs()) {
                            def repositoryUrl = scm[0].getUserRemoteConfigs()[0].getUrl()
                            def jobRepoName = repositoryUrl.tokenize('/').last().replace('.git', '')

                            if (jobRepoName == env.TARGET_REPO_NAME) {
                                matchingJobs << job.fullName
                            }
                        }
                    }

                    if (matchingJobs) {
                        println "----- ${env.TARGET_REPO_NAME}"
                        matchingJobs.each { jobName ->
                            println jobName
                        }
                    }
                }
            }
        }
    }
}
